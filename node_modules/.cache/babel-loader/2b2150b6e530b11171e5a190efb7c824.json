{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/react/my-blog/src/components/Posts/Posts.js\";\nimport React from 'react';\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { requestApiData } from \"../../actions\";\nimport Post from './Post/Post';\n\nclass Posts extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.filterPosts = event => {\n      let searchResult = this.props.data.posts;\n      const searchQuery = event.target.value;\n\n      if (searchResult !== undefined) {\n        searchResult = searchResult.filter(function (i) {\n          console.log(searchResult);\n          return i.body.indexOf(searchQuery) > -1;\n        });\n      }\n\n      this.setState({\n        currentData: searchResult\n      });\n      console.log(\"searchResult\", searchResult);\n    };\n\n    this.posts = (key, index) => React.createElement(Post, {\n      key: index,\n      userId: key.userId,\n      postId: key.id,\n      title: key.title,\n      body: key.body,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    });\n\n    this.postsOnSearch = (key, index) => React.createElement(Post, {\n      key: index,\n      userId: key.userId,\n      postId: key.id,\n      title: key.title,\n      body: key.body,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    });\n\n    this.state = {\n      search: '',\n      currentData: [{\n        body: \"quia et suscipit↵suscipit recusandae consequuntur expedita et cum↵reprehenderit molestiae ut ut quas totam↵nostrum rerum est autem sunt rem eveniet architecto\",\n        id: 1,\n        title: \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\n        userId: 1\n      }]\n    };\n    console.log('THISIS: ', this.state.currentData);\n  }\n\n  componentDidMount() {\n    this.props.requestApiData();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Posts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.filterPosts,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })), this.state.currentData === undefined ? (this.props.data.posts || []).map(this.posts) : (this.state.currentData || []).map(this.postsOnSearch));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  data: state.data\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  requestApiData\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts);","map":{"version":3,"sources":["/Applications/MAMP/htdocs/react/my-blog/src/components/Posts/Posts.js"],"names":["React","bindActionCreators","connect","requestApiData","Post","Posts","Component","constructor","props","filterPosts","event","searchResult","data","posts","searchQuery","target","value","undefined","filter","i","console","log","body","indexOf","setState","currentData","key","index","userId","id","title","postsOnSearch","state","search","componentDidMount","render","map","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { requestApiData } from \"../../actions\";\nimport Post from './Post/Post'\n\n\nclass Posts extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      search: '',\n      currentData: [{body: \"quia et suscipit↵suscipit recusandae consequuntur expedita et cum↵reprehenderit molestiae ut ut quas totam↵nostrum rerum est autem sunt rem eveniet architecto\",\nid: 1,\ntitle: \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\nuserId: 1}]\n    }\n    console.log('THISIS: ',this.state.currentData)\n  }\n\n  componentDidMount() {\n    this.props.requestApiData();\n  }\n\n\n  filterPosts = (event) => {\n    let searchResult = this.props.data.posts;\n    const searchQuery = event.target.value\n    if(searchResult !== undefined) {\n      searchResult = searchResult.filter(function(i){\n        console.log(searchResult)\n        return (i.body.indexOf(searchQuery) > -1)\n      })\n    }\n    this.setState({\n      currentData: searchResult\n    })\n    console.log(\"searchResult\", searchResult)\n  }\n\n\n  posts = (key, index) => (\n      <Post key={index} userId={key.userId} postId={key.id} title={key.title} body={key.body} />\n  )\n\n  postsOnSearch = (key, index) => (\n      <Post key={index} userId={key.userId} postId={key.id} title={key.title} body={key.body} />\n  )\n\n  render() {\n    return (\n\n      <div className=\"Posts\">\n        <div className={\"Search\"}>\n          <input type=\"text\" onChange={this.filterPosts} />\n        </div>\n          { (this.state.currentData === undefined) ? (this.props.data.posts || []).map(this.posts) : (this.state.currentData || []).map(this.postsOnSearch)}\n      </div>\n\n    )\n  }\n}\n\nconst mapStateToProps = state => ({data: state.data});\nconst mapDispatchToProps = dispatch => bindActionCreators({requestApiData}, dispatch)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts)\n"]},"metadata":{},"sourceType":"module"}