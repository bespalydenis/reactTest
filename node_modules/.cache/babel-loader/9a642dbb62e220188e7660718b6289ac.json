{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/react/my-blog/src/components/Posts/Posts.js\";\nimport React from 'react';\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { requestApiData } from \"../../actions\";\nimport Post from './Post/Post';\n\nclass Posts extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.thisTest = () => {\n      this.setState({\n        currentData: []\n      });\n    };\n\n    this.posts = (key, inder) => React.createElement(Post, {\n      key: inder,\n      userId: key.userId,\n      postId: key.id,\n      title: key.title,\n      body: key.body,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    });\n\n    this.state = {\n      search: '',\n      currentData: this.props.data.posts\n    };\n    console.log('THISIS: ', this.state.currentData);\n  }\n\n  componentDidMount() {\n    this.props.requestApiData();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Posts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      onChange: () => this.thisTest,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })), (this.props.data.posts || []).map(this.posts));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  data: state.data\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  requestApiData\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts);","map":{"version":3,"sources":["/Applications/MAMP/htdocs/react/my-blog/src/components/Posts/Posts.js"],"names":["React","bindActionCreators","connect","requestApiData","Post","Posts","Component","constructor","props","thisTest","setState","currentData","posts","key","inder","userId","id","title","body","state","search","data","console","log","componentDidMount","render","map","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,IAAP,MAAiB,aAAjB;;AAGA,MAAMC,KAAN,SAAoBL,KAAK,CAACM,SAA1B,CAAoC;AAElCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAcnBC,QAdmB,GAcR,MAAM;AACf,WAAKC,QAAL,CAAc;AACZC,QAAAA,WAAW,EAAE;AADD,OAAd;AAGD,KAlBkB;;AAAA,SAqBnBC,KArBmB,GAqBX,CAACC,GAAD,EAAMC,KAAN,KAEJ,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,KAAX;AAAkB,MAAA,MAAM,EAAED,GAAG,CAACE,MAA9B;AAAsC,MAAA,MAAM,EAAEF,GAAG,CAACG,EAAlD;AAAsD,MAAA,KAAK,EAAEH,GAAG,CAACI,KAAjE;AAAwE,MAAA,IAAI,EAAEJ,GAAG,CAACK,IAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvBe;;AAEjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,EADG;AAEXT,MAAAA,WAAW,EAAE,KAAKH,KAAL,CAAWa,IAAX,CAAgBT;AAFlB,KAAb;AAIAU,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuB,KAAKJ,KAAL,CAAWR,WAAlC;AACD;;AAEDa,EAAAA,iBAAiB,GAAG;AAClB,SAAKhB,KAAL,CAAWL,cAAX;AACD;;AAgBDsB,EAAAA,MAAM,GAAG;AACP,WAEE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAE,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAE,MAAI,KAAKhB,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIK,CAAC,KAAKD,KAAL,CAAWa,IAAX,CAAgBT,KAAhB,IAAyB,EAA1B,EAA8Bc,GAA9B,CAAkC,KAAKd,KAAvC,CAJL,CAFF;AAUD;;AAxCiC;;AA2CpC,MAAMe,eAAe,GAAGR,KAAK,KAAK;AAACE,EAAAA,IAAI,EAAEF,KAAK,CAACE;AAAb,CAAL,CAA7B;;AACA,MAAMO,kBAAkB,GAAGC,QAAQ,IAAI5B,kBAAkB,CAAC;AAACE,EAAAA;AAAD,CAAD,EAAmB0B,QAAnB,CAAzD;;AAEA,eAAe3B,OAAO,CAACyB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CvB,KAA7C,CAAf","sourcesContent":["import React from 'react'\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { requestApiData } from \"../../actions\";\nimport Post from './Post/Post'\n\n\nclass Posts extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      search: '',\n      currentData: this.props.data.posts\n    }\n    console.log('THISIS: ',this.state.currentData)\n  }\n\n  componentDidMount() {\n    this.props.requestApiData();\n  }\n\n\n  thisTest = () => {\n    this.setState({\n      currentData: []\n    })\n  }\n\n\n  posts = (key, inder) => (\n\n      <Post key={inder} userId={key.userId} postId={key.id} title={key.title} body={key.body} />\n\n  )\n\n  render() {\n    return (\n\n      <div className=\"Posts\">\n        <div className={\"Search\"}>\n          <input type=\"text\" onChange={()=>this.thisTest} />\n        </div>\n          {(this.props.data.posts || []).map(this.posts)}\n      </div>\n\n    )\n  }\n}\n\nconst mapStateToProps = state => ({data: state.data});\nconst mapDispatchToProps = dispatch => bindActionCreators({requestApiData}, dispatch)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts)\n"]},"metadata":{},"sourceType":"module"}