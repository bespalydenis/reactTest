{"ast":null,"code":"import { call, put, takeEvery, takeLatest } from \"redux-saga/effects\";\nimport { REQUEST_API_DATA, receiveApiData, REQUEST_API_POST, receiveApiPost } from \"./actions\";\nimport { fetchData, fetchPost } from \"./api\"; //import { fetchPostData } from \"./apis/postData\";\n\nfunction* getApiData(action) {\n  try {\n    const data = yield call(fetchData);\n    yield put(receiveApiData(data));\n  } catch (e) {\n    console.log('Error', e);\n  }\n}\n\nfunction* getApiPost(action) {\n  try {\n    const data = yield call(fetchPost);\n    yield put(receiveApiPost(data, action.id));\n    console.log('2HERE', action.id);\n  } catch (e) {\n    console.log('Erro2r', e);\n  }\n}\n\nexport default function* mySaga() {\n  yield takeLatest(REQUEST_API_DATA, getApiData);\n  yield takeLatest(REQUEST_API_POST, getApiPost);\n}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/react/my-blog/src/sagas.js"],"names":["call","put","takeEvery","takeLatest","REQUEST_API_DATA","receiveApiData","REQUEST_API_POST","receiveApiPost","fetchData","fetchPost","getApiData","action","data","e","console","log","getApiPost","id","mySaga"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,SAApB,EAA+BC,UAA/B,QAAiD,oBAAjD;AACA,SAASC,gBAAT,EAA2BC,cAA3B,EAA2CC,gBAA3C,EAA6DC,cAA7D,QAAmF,WAAnF;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,OAArC,C,CACA;;AAGA,UAAUC,UAAV,CAAqBC,MAArB,EAA6B;AAC3B,MAAI;AACF,UAAMC,IAAI,GAAG,MAAMZ,IAAI,CAACQ,SAAD,CAAvB;AACA,UAAMP,GAAG,CAACI,cAAc,CAACO,IAAD,CAAf,CAAT;AACD,GAHD,CAGE,OAAOC,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBF,CAApB;AACD;AACF;;AACD,UAAUG,UAAV,CAAqBL,MAArB,EAA6B;AAC3B,MAAI;AACF,UAAMC,IAAI,GAAG,MAAMZ,IAAI,CAACS,SAAD,CAAvB;AACA,UAAMR,GAAG,CAACM,cAAc,CAACK,IAAD,EAAOD,MAAM,CAACM,EAAd,CAAf,CAAT;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBJ,MAAM,CAACM,EAA3B;AACD,GAJD,CAIE,OAAOJ,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBF,CAArB;AACD;AACF;;AAGD,eAAe,UAAUK,MAAV,GAAmB;AAChC,QAAMf,UAAU,CAACC,gBAAD,EAAmBM,UAAnB,CAAhB;AACA,QAAMP,UAAU,CAACG,gBAAD,EAAmBU,UAAnB,CAAhB;AACD","sourcesContent":["import { call, put, takeEvery, takeLatest } from \"redux-saga/effects\";\nimport { REQUEST_API_DATA, receiveApiData, REQUEST_API_POST, receiveApiPost } from \"./actions\";\nimport { fetchData, fetchPost } from \"./api\";\n//import { fetchPostData } from \"./apis/postData\";\n\n\nfunction* getApiData(action) {\n  try {\n    const data = yield call(fetchData);\n    yield put(receiveApiData(data));\n  } catch (e) {\n    console.log('Error',e);\n  }\n}\nfunction* getApiPost(action) {\n  try {\n    const data = yield call(fetchPost);\n    yield put(receiveApiPost(data, action.id));\n    console.log('2HERE',action.id);\n  } catch (e) {\n    console.log('Erro2r',e);\n  }\n}\n\n\nexport default function* mySaga() {\n  yield takeLatest(REQUEST_API_DATA, getApiData);\n  yield takeLatest(REQUEST_API_POST, getApiPost);\n}\n"]},"metadata":{},"sourceType":"module"}