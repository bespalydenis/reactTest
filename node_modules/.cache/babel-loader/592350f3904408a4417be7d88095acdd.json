{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/react/my-blog/src/components/Posts/Posts.js\";\nimport React from 'react';\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { requestApiData } from \"../../actions\";\nimport Post from './Post/Post';\n\nclass Posts extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.thisTest = event => {\n      let searchResult = this.props.data.posts;\n      const searchQuery = event.target.value;\n\n      if (searchResult !== undefined) {\n        searchResult = searchResult.filter(i => {\n          if (i.body.search(searchQuery) || i.title.search(searchQuery)) {\n            searchResult.splice(i, 1);\n            console.log('!');\n          } else {\n            console.log('x');\n          }\n        });\n      }\n\n      this.setState({\n        currentData: searchResult\n      });\n      console.log(\"searchResult\", searchResult);\n    };\n\n    this.posts = (key, inder) => React.createElement(Post, {\n      key: inder,\n      userId: key.userId,\n      postId: key.id,\n      title: key.title,\n      body: key.body,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    });\n\n    this.state = {\n      search: '',\n      currentData: [{\n        body: \"quia et suscipit↵suscipit recusandae consequuntur expedita et cum↵reprehenderit molestiae ut ut quas totam↵nostrum rerum est autem sunt rem eveniet architecto\",\n        id: 1,\n        title: \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\n        userId: 1\n      }]\n    };\n    console.log('THISIS: ', this.state.currentData);\n  }\n\n  componentDidMount() {\n    this.props.requestApiData();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Posts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.thisTest,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })), this.state.currentData === undefined ? (this.props.data.posts || []).map(this.posts) : (this.state.currentData || []).map((x, i) => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, x.body);\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  data: state.data\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  requestApiData\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts);","map":{"version":3,"sources":["/Applications/MAMP/htdocs/react/my-blog/src/components/Posts/Posts.js"],"names":["React","bindActionCreators","connect","requestApiData","Post","Posts","Component","constructor","props","thisTest","event","searchResult","data","posts","searchQuery","target","value","undefined","filter","i","body","search","title","splice","console","log","setState","currentData","key","inder","userId","id","state","componentDidMount","render","map","x","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { requestApiData } from \"../../actions\";\nimport Post from './Post/Post'\n\n\nclass Posts extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      search: '',\n      currentData: [{body: \"quia et suscipit↵suscipit recusandae consequuntur expedita et cum↵reprehenderit molestiae ut ut quas totam↵nostrum rerum est autem sunt rem eveniet architecto\",\nid: 1,\ntitle: \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\nuserId: 1}]\n    }\n    console.log('THISIS: ',this.state.currentData)\n  }\n\n  componentDidMount() {\n    this.props.requestApiData();\n  }\n\n\n  thisTest = (event) => {\n    let searchResult = this.props.data.posts;\n    const searchQuery = event.target.value\n    if(searchResult !== undefined) {\n      searchResult = searchResult.filter((i)=>{\n        if(i.body.search(searchQuery) || i.title.search(searchQuery)) {\n          searchResult.splice(i,1)\n          console.log('!')\n        } else {\n          console.log('x')\n        }\n      })\n    }\n    this.setState({\n      currentData: searchResult\n    })\n    console.log(\"searchResult\", searchResult)\n  }\n\n\n  posts = (key, inder) => (\n\n      <Post key={inder} userId={key.userId} postId={key.id} title={key.title} body={key.body} />\n\n  )\n\n  render() {\n    return (\n\n      <div className=\"Posts\">\n        <div className={\"Search\"}>\n          <input type=\"text\" onChange={this.thisTest} />\n        </div>\n          { (this.state.currentData === undefined) ? (this.props.data.posts || []).map(this.posts) : (this.state.currentData || []).map((x,i)=>{ return( <div>{x.body}</div> ) })}\n      </div>\n\n    )\n  }\n}\n\nconst mapStateToProps = state => ({data: state.data});\nconst mapDispatchToProps = dispatch => bindActionCreators({requestApiData}, dispatch)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts)\n"]},"metadata":{},"sourceType":"module"}