{"ast":null,"code":"import { call, put, takeEvery, takeLatest } from \"redux-saga/effects\";\nimport { REQUEST_API_DATA, receiveApiData } from \"./actions\";\nimport { fetchData } from \"./api\"; // worker Saga: will be fired on USER_FETCH_REQUESTED actions\n\nfunction* getApiData(action) {\n  try {\n    const data = yield call(fetchData);\n    yield put(receiveApiData(data));\n  } catch (e) {\n    console.log(e);\n  }\n} // function* fetchPosts(action) {\n//   try{\n//     const posts = yield call(fetchData);\n//     yield put({type: \"USER_FETCH_SUCCEEDED\", posts: posts})\n//     console.log(posts)\n//   } catch(e) {\n//     yield put({type: \"USER_FETCH_FAILED\", message: e.message});\n//   }\n// }\n\n\nfunction* mySaga() {\n  yield takeLatest(RECEIVE_API_DATA, getApiData);\n}\n\nexport default mySaga;","map":{"version":3,"sources":["/Applications/MAMP/htdocs/react/my-blog/src/sagas.js"],"names":["call","put","takeEvery","takeLatest","REQUEST_API_DATA","receiveApiData","fetchData","getApiData","action","data","e","console","log","mySaga","RECEIVE_API_DATA"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,SAApB,EAA+BC,UAA/B,QAAiD,oBAAjD;AACA,SAASC,gBAAT,EAA2BC,cAA3B,QAAiD,WAAjD;AACA,SAASC,SAAT,QAA0B,OAA1B,C,CAEA;;AACA,UAAUC,UAAV,CAAqBC,MAArB,EAA6B;AAC3B,MAAI;AACF,UAAMC,IAAI,GAAG,MAAMT,IAAI,CAACM,SAAD,CAAvB;AACA,UAAML,GAAG,CAACI,cAAc,CAACI,IAAD,CAAf,CAAT;AACD,GAHD,CAGE,OAAOC,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;AACF,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAIA,UAAUG,MAAV,GAAmB;AACjB,QAAMV,UAAU,CAACW,gBAAD,EAAmBP,UAAnB,CAAhB;AACD;;AAED,eAAeM,MAAf","sourcesContent":["import { call, put, takeEvery, takeLatest } from \"redux-saga/effects\";\nimport { REQUEST_API_DATA, receiveApiData } from \"./actions\";\nimport { fetchData } from \"./api\";\n\n// worker Saga: will be fired on USER_FETCH_REQUESTED actions\nfunction* getApiData(action) {\n  try {\n    const data = yield call(fetchData);\n    yield put(receiveApiData(data));\n  } catch (e) {\n    console.log(e);\n  }\n}\n\n// function* fetchPosts(action) {\n//   try{\n//     const posts = yield call(fetchData);\n//     yield put({type: \"USER_FETCH_SUCCEEDED\", posts: posts})\n//     console.log(posts)\n//   } catch(e) {\n//     yield put({type: \"USER_FETCH_FAILED\", message: e.message});\n//   }\n// }\n\n\n\nfunction* mySaga() {\n  yield takeLatest(RECEIVE_API_DATA, getApiData);\n}\n\nexport default mySaga;\n"]},"metadata":{},"sourceType":"module"}