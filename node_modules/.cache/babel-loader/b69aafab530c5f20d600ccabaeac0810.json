{"ast":null,"code":"import { call, put, takeEvery, takeLatest } from \"redux-saga/effects\";\nimport { REQUEST_API_DATA, receiveApiData, REQUEST_API_POST, receiveApiPost, REQUEST_API_USER, receiveApiUser } from \"./actions\";\nimport { fetchData, fetchPost, fetchUser } from \"./api\";\n\nfunction* getApiData(action) {\n  try {\n    const data = yield call(fetchData);\n    yield put(receiveApiData(data));\n  } catch (e) {\n    console.log('Error', e);\n  }\n}\n\nfunction* getApiPost(action) {\n  try {\n    const post = yield call(fetchPost, action.id);\n    console.log('GET POSTS: ', post.userId);\n    const user = yield call(fetchUser, action.userId);\n    const data = {\n      user,\n      post\n    };\n    yield put(receiveApiPost(data));\n  } catch (e) {\n    console.log('Error', e);\n  }\n}\n\nfunction* getApiUser(action) {\n  try {\n    const data = yield call(fetchUser, action.id);\n    yield put(receiveApiUser(data));\n    console.log('FETCH: ', data);\n  } catch (e) {\n    console.log('Error', e);\n  }\n}\n\nexport default function* mySaga() {\n  yield takeLatest(REQUEST_API_DATA, getApiData);\n  yield takeLatest(REQUEST_API_USER, getApiUser);\n  yield takeLatest(REQUEST_API_POST, getApiPost); // yield* [\n  //   takeEvery(REQUEST_API_DATA, getApiData),\n  //   takeEvery(REQUEST_API_POST, getApiPost),\n  //   takeEvery(REQUEST_API_USER, getApiUser),\n  // ]\n}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/react/my-blog/src/sagas.js"],"names":["call","put","takeEvery","takeLatest","REQUEST_API_DATA","receiveApiData","REQUEST_API_POST","receiveApiPost","REQUEST_API_USER","receiveApiUser","fetchData","fetchPost","fetchUser","getApiData","action","data","e","console","log","getApiPost","post","id","userId","user","getApiUser","mySaga"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,SAApB,EAA+BC,UAA/B,QAAiD,oBAAjD;AACA,SAASC,gBAAT,EAA2BC,cAA3B,EAA2CC,gBAA3C,EAA6DC,cAA7D,EAA6EC,gBAA7E,EAA+FC,cAA/F,QAAqH,WAArH;AACA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,SAA/B,QAAgD,OAAhD;;AAGA,UAAUC,UAAV,CAAqBC,MAArB,EAA6B;AAC3B,MAAI;AACF,UAAMC,IAAI,GAAG,MAAMf,IAAI,CAACU,SAAD,CAAvB;AACA,UAAMT,GAAG,CAACI,cAAc,CAACU,IAAD,CAAf,CAAT;AACD,GAHD,CAGE,OAAOC,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBF,CAApB;AACD;AACF;;AAED,UAAUG,UAAV,CAAqBL,MAArB,EAA6B;AAC3B,MAAI;AACF,UAAMM,IAAI,GAAG,MAAMpB,IAAI,CAACW,SAAD,EAAYG,MAAM,CAACO,EAAnB,CAAvB;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0BE,IAAI,CAACE,MAA/B;AACA,UAAMC,IAAI,GAAG,MAAMvB,IAAI,CAACY,SAAD,EAAYE,MAAM,CAACQ,MAAnB,CAAvB;AACA,UAAMP,IAAI,GAAG;AACXQ,MAAAA,IADW;AACLH,MAAAA;AADK,KAAb;AAGA,UAAMnB,GAAG,CAACM,cAAc,CAACQ,IAAD,CAAf,CAAT;AACD,GARD,CAQE,OAAOC,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBF,CAApB;AACD;AACF;;AAED,UAAUQ,UAAV,CAAqBV,MAArB,EAA6B;AAC3B,MAAI;AACF,UAAMC,IAAI,GAAG,MAAMf,IAAI,CAACY,SAAD,EAAYE,MAAM,CAACO,EAAnB,CAAvB;AACA,UAAMpB,GAAG,CAACQ,cAAc,CAACM,IAAD,CAAf,CAAT;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBH,IAAtB;AACD,GAJD,CAIE,OAAOC,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBF,CAApB;AACD;AACF;;AAGD,eAAe,UAAUS,MAAV,GAAmB;AAChC,QAAMtB,UAAU,CAACC,gBAAD,EAAmBS,UAAnB,CAAhB;AACA,QAAMV,UAAU,CAACK,gBAAD,EAAmBgB,UAAnB,CAAhB;AACA,QAAMrB,UAAU,CAACG,gBAAD,EAAmBa,UAAnB,CAAhB,CAHgC,CAIhC;AACA;AACA;AACA;AACA;AACD","sourcesContent":["import { call, put, takeEvery, takeLatest } from \"redux-saga/effects\";\nimport { REQUEST_API_DATA, receiveApiData, REQUEST_API_POST, receiveApiPost, REQUEST_API_USER, receiveApiUser } from \"./actions\";\nimport { fetchData, fetchPost, fetchUser } from \"./api\";\n\n\nfunction* getApiData(action) {\n  try {\n    const data = yield call(fetchData);\n    yield put(receiveApiData(data));\n  } catch (e) {\n    console.log('Error',e);\n  }\n}\n\nfunction* getApiPost(action) {\n  try {\n    const post = yield call(fetchPost, action.id);\n    console.log('GET POSTS: ',post.userId)\n    const user = yield call(fetchUser, action.userId);\n    const data = {\n      user, post\n    }\n    yield put(receiveApiPost(data));\n  } catch (e) {\n    console.log('Error',e);\n  }\n}\n\nfunction* getApiUser(action) {\n  try {\n    const data = yield call(fetchUser, action.id);\n    yield put(receiveApiUser(data));\n    console.log('FETCH: ',data)\n  } catch (e) {\n    console.log('Error',e);\n  }\n}\n\n\nexport default function* mySaga() {\n  yield takeLatest(REQUEST_API_DATA, getApiData);\n  yield takeLatest(REQUEST_API_USER, getApiUser);\n  yield takeLatest(REQUEST_API_POST, getApiPost);\n  // yield* [\n  //   takeEvery(REQUEST_API_DATA, getApiData),\n  //   takeEvery(REQUEST_API_POST, getApiPost),\n  //   takeEvery(REQUEST_API_USER, getApiUser),\n  // ]\n}\n"]},"metadata":{},"sourceType":"module"}