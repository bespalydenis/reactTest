{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/react/my-blog/src/components/Posts/Posts.js\";\nimport React from 'react';\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { requestApiData } from \"../../actions\";\nimport Post from './Post/Post';\n\nclass Posts extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateSeacrh = event => {\n      this.setState({\n        search: 'dsds'\n      });\n    };\n\n    this.posts = (key, inder) => React.createElement(Post, {\n      key: inder,\n      userId: key.userId,\n      postId: key.id,\n      title: key.title,\n      body: key.body,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    });\n\n    this.state = {\n      search: 'Level Upo'\n    };\n  }\n\n  componentDidMount() {\n    this.props.requestApiData();\n  } // onInputChange(event) {\n  //   let new = _.filter(this.props.data.posts)\n  // }\n\n\n  render() {\n    let filteredPosts = this.posts.filter(post => {\n      return post.title.indexOf(this.state.seacrh) != -1;\n    });\n    return React.createElement(\"div\", {\n      className: \"Posts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      onChange: () => this.text,\n      onChange: this.updateSeacrh,\n      value: this.state.seacrh,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })), (this.props.data.posts || []).map(filteredCotacts));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  data: state.data\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  requestApiData\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts);","map":{"version":3,"sources":["/Applications/MAMP/htdocs/react/my-blog/src/components/Posts/Posts.js"],"names":["React","bindActionCreators","connect","requestApiData","Post","Posts","Component","constructor","props","updateSeacrh","event","setState","search","posts","key","inder","userId","id","title","body","state","componentDidMount","render","filteredPosts","filter","post","indexOf","seacrh","text","data","map","filteredCotacts","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,IAAP,MAAiB,aAAjB;;AAGA,MAAMC,KAAN,SAAoBL,KAAK,CAACM,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAenBC,YAfmB,GAeHC,KAAD,IAAW;AACxB,WAAKC,QAAL,CAAc;AACZC,QAAAA,MAAM,EAAE;AADI,OAAd;AAGD,KAnBkB;;AAAA,SAsBnBC,KAtBmB,GAsBX,CAACC,GAAD,EAAMC,KAAN,KAEJ,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,KAAX;AAAkB,MAAA,MAAM,EAAED,GAAG,CAACE,MAA9B;AAAsC,MAAA,MAAM,EAAEF,GAAG,CAACG,EAAlD;AAAsD,MAAA,KAAK,EAAEH,GAAG,CAACI,KAAjE;AAAwE,MAAA,IAAI,EAAEJ,GAAG,CAACK,IAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxBe;;AAEjB,SAAKC,KAAL,GAAa;AACXR,MAAAA,MAAM,EAAE;AADG,KAAb;AAGD;;AAEDS,EAAAA,iBAAiB,GAAG;AAClB,SAAKb,KAAL,CAAWL,cAAX;AACD,GAViC,CAYlC;AACA;AACA;;;AAeAmB,EAAAA,MAAM,GAAG;AACP,QAAIC,aAAa,GAAG,KAAKV,KAAL,CAAWW,MAAX,CACjBC,IAAD,IAAU;AACR,aAAOA,IAAI,CAACP,KAAL,CAAWQ,OAAX,CAAmB,KAAKN,KAAL,CAAWO,MAA9B,KAAyC,CAAC,CAAjD;AACD,KAHiB,CAApB;AAKA,WAEE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAE,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAE,MAAI,KAAKC,IAAtC;AAA4C,MAAA,QAAQ,EAAE,KAAKnB,YAA3D;AAAyE,MAAA,KAAK,EAAE,KAAKW,KAAL,CAAWO,MAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIK,CAAC,KAAKnB,KAAL,CAAWqB,IAAX,CAAgBhB,KAAhB,IAAyB,EAA1B,EAA8BiB,GAA9B,CAAkCC,eAAlC,CAJL,CAFF;AAUD;;AA7CiC;;AAgDpC,MAAMC,eAAe,GAAGZ,KAAK,KAAK;AAACS,EAAAA,IAAI,EAAET,KAAK,CAACS;AAAb,CAAL,CAA7B;;AACA,MAAMI,kBAAkB,GAAGC,QAAQ,IAAIjC,kBAAkB,CAAC;AAACE,EAAAA;AAAD,CAAD,EAAmB+B,QAAnB,CAAzD;;AAEA,eAAehC,OAAO,CAAC8B,eAAD,EAAkBC,kBAAlB,CAAP,CAA6C5B,KAA7C,CAAf","sourcesContent":["import React from 'react'\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { requestApiData } from \"../../actions\";\nimport Post from './Post/Post'\n\n\nclass Posts extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      search: 'Level Upo'\n    }\n  }\n\n  componentDidMount() {\n    this.props.requestApiData();\n  }\n\n  // onInputChange(event) {\n  //   let new = _.filter(this.props.data.posts)\n  // }\n\n  updateSeacrh = (event) => {\n    this.setState({\n      search: 'dsds'\n    })\n  }\n\n\n  posts = (key, inder) => (\n\n      <Post key={inder} userId={key.userId} postId={key.id} title={key.title} body={key.body} />\n\n  )\n\n  render() {\n    let filteredPosts = this.posts.filter(\n      (post) => {\n        return post.title.indexOf(this.state.seacrh) != -1;\n      }\n    );\n    return (\n\n      <div className=\"Posts\">\n        <div className={\"Search\"}>\n          <input type=\"text\" onChange={()=>this.text} onChange={this.updateSeacrh} value={this.state.seacrh} />\n        </div>\n          {(this.props.data.posts || []).map(filteredCotacts)}\n      </div>\n\n    )\n  }\n}\n\nconst mapStateToProps = state => ({data: state.data});\nconst mapDispatchToProps = dispatch => bindActionCreators({requestApiData}, dispatch)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts)\n"]},"metadata":{},"sourceType":"module"}