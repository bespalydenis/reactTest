{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/react/my-blog/src/components/Posts/Posts.js\";\nimport React from 'react';\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { requestApiData } from \"../../actions\";\nimport Post from './Post/Post';\n\nclass Posts extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.text = event => {\n      if (Array.isArray(this.props.data.posts)) {\n        let info = {};\n        const seacrhResult = (this.props.data.posts || []).map((key, index) => {\n          if (key.body.indexOf('quia et suscipit suscipit') > -1) {\n            info = {\n              userId: key.userId\n            };\n          } // console.log(event.target.value, key.userId)\n\n        });\n        console.log(event.target.value, seacrhResult);\n      }\n    };\n\n    this.posts = (key, inder) => React.createElement(Post, {\n      key: inder,\n      userId: key.userId,\n      postId: key.id,\n      title: key.title,\n      body: key.body,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    });\n\n    console.log('MAIN', this.props);\n  }\n\n  componentDidMount() {\n    this.props.requestApiData();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Posts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })), (this.props.data.posts || []).map(this.posts));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  data: state.data\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  requestApiData\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts);","map":{"version":3,"sources":["/Applications/MAMP/htdocs/react/my-blog/src/components/Posts/Posts.js"],"names":["React","bindActionCreators","connect","requestApiData","Post","Posts","Component","constructor","props","text","event","Array","isArray","data","posts","info","seacrhResult","map","key","index","body","indexOf","userId","console","log","target","value","inder","id","title","componentDidMount","render","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,IAAP,MAAiB,aAAjB;;AAGA,MAAMC,KAAN,SAAoBL,KAAK,CAACM,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SASnBC,IATmB,GASbC,KAAD,IAAU;AACb,UAAGC,KAAK,CAACC,OAAN,CAAc,KAAKJ,KAAL,CAAWK,IAAX,CAAgBC,KAA9B,CAAH,EAAyC;AACvC,YAAIC,IAAI,GAAG,EAAX;AAGF,cAAMC,YAAY,GAAG,CAAC,KAAKR,KAAL,CAAWK,IAAX,CAAgBC,KAAhB,IAAyB,EAA1B,EAA8BG,GAA9B,CAAkC,CAACC,GAAD,EAAMC,KAAN,KAAe;AACpE,cAAGD,GAAG,CAACE,IAAJ,CAASC,OAAT,CAAiB,2BAAjB,IAAgD,CAAC,CAApD,EAAuD;AACrDN,YAAAA,IAAI,GAAG;AACLO,cAAAA,MAAM,EAAEJ,GAAG,CAACI;AADP,aAAP;AAGD,WALmE,CAMlE;;AACH,SAPoB,CAArB;AAQCC,QAAAA,OAAO,CAACC,GAAR,CAAYd,KAAK,CAACe,MAAN,CAAaC,KAAzB,EAAgCV,YAAhC;AACF;AACA,KAxBkB;;AAAA,SA0BnBF,KA1BmB,GA0BX,CAACI,GAAD,EAAMS,KAAN,KAEJ,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,KAAX;AAAkB,MAAA,MAAM,EAAET,GAAG,CAACI,MAA9B;AAAsC,MAAA,MAAM,EAAEJ,GAAG,CAACU,EAAlD;AAAsD,MAAA,KAAK,EAAEV,GAAG,CAACW,KAAjE;AAAwE,MAAA,IAAI,EAAEX,GAAG,CAACE,IAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA5Be;;AAEjBG,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmB,KAAKhB,KAAxB;AACD;;AAEDsB,EAAAA,iBAAiB,GAAG;AAClB,SAAKtB,KAAL,CAAWL,cAAX;AACD;;AAyBD4B,EAAAA,MAAM,GAAG;AACP,WAEE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAE,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAE,KAAKtB,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIK,CAAC,KAAKD,KAAL,CAAWK,IAAX,CAAgBC,KAAhB,IAAyB,EAA1B,EAA8BG,GAA9B,CAAkC,KAAKH,KAAvC,CAJL,CAFF;AAUD;;AA5CiC;;AA+CpC,MAAMkB,eAAe,GAAGC,KAAK,KAAK;AAACpB,EAAAA,IAAI,EAAEoB,KAAK,CAACpB;AAAb,CAAL,CAA7B;;AACA,MAAMqB,kBAAkB,GAAGC,QAAQ,IAAIlC,kBAAkB,CAAC;AAACE,EAAAA;AAAD,CAAD,EAAmBgC,QAAnB,CAAzD;;AAEA,eAAejC,OAAO,CAAC8B,eAAD,EAAkBE,kBAAlB,CAAP,CAA6C7B,KAA7C,CAAf","sourcesContent":["import React from 'react'\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { requestApiData } from \"../../actions\";\nimport Post from './Post/Post'\n\n\nclass Posts extends React.Component {\n  constructor(props) {\n    super(props)\n    console.log('MAIN',this.props)\n  }\n\n  componentDidMount() {\n    this.props.requestApiData();\n  }\n\n  text=(event)=> {\n    if(Array.isArray(this.props.data.posts)) {\n      let info = {\n\n      };\n    const seacrhResult = (this.props.data.posts || []).map((key, index) =>{\n      if(key.body.indexOf('quia et suscipit suscipit') > -1) {\n        info = {\n          userId: key.userId\n        }\n      }\n        // console.log(event.target.value, key.userId)\n    });\n     console.log(event.target.value, seacrhResult)\n  }\n  }\n\n  posts = (key, inder) => (\n\n      <Post key={inder} userId={key.userId} postId={key.id} title={key.title} body={key.body} />\n\n  )\n\n  render() {\n    return (\n\n      <div className=\"Posts\">\n        <div className={\"Search\"}>\n          <input type=\"text\" onChange={this.text} />\n        </div>\n          {(this.props.data.posts || []).map(this.posts)}\n      </div>\n\n    )\n  }\n}\n\nconst mapStateToProps = state => ({data: state.data});\nconst mapDispatchToProps = dispatch => bindActionCreators({requestApiData}, dispatch)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts)\n"]},"metadata":{},"sourceType":"module"}